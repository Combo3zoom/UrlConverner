{"ast":null,"code":"import { Subject, takeUntil } from \"rxjs\";\nimport { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nclass RegisterComponent {\n  constructor(fb, http, router) {\n    this.fb = fb;\n    this.http = http;\n    this.router = router;\n    this.registerForm = null;\n    this.destroy$ = new Subject();\n  }\n  ngOnInit() {\n    this.initRegisterForm();\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  initRegisterForm() {\n    this.registerForm = this.fb.group({\n      name: ['', [Validators.required]],\n      password: ['', [Validators.required, Validators.pattern(/^(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)]]\n    });\n  }\n  onSubmit() {\n    if (this.registerForm.valid) {\n      const {\n        name,\n        password\n      } = this.registerForm.value;\n      this.http.post('https://your-backend-api/Auth/Register', {\n        name,\n        password\n      }).pipe(takeUntil(this.destroy$)).subscribe(() => {\n        this.router.navigate(['/login']);\n      });\n    }\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 2,\n  vars: 0,\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"register works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { RegisterComponent };","map":{"version":3,"names":["Subject","takeUntil","Validators","RegisterComponent","constructor","fb","http","router","registerForm","destroy$","ngOnInit","initRegisterForm","ngOnDestroy","next","complete","group","name","required","password","pattern","onSubmit","valid","value","post","pipe","subscribe","navigate","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Router","selectors","decls","vars","template","RegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["/Users/artur.zaiats/Documents/Projects/UrlWebApp/src/app/register/register.component.ts","/Users/artur.zaiats/Documents/Projects/UrlWebApp/src/app/register/register.component.html"],"sourcesContent":["import {Subject, takeUntil} from \"rxjs\";\nimport {Component, OnDestroy, OnInit} from \"@angular/core\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n  registerForm: FormGroup | null = null;\n  private destroy$ = new Subject<void>();\n\n  constructor(private fb: FormBuilder, private http: HttpClient, private router: Router) {}\n\n  ngOnInit(): void {\n    this.initRegisterForm();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  initRegisterForm(): void {\n    this.registerForm = this.fb.group({\n      name: ['', [Validators.required]],\n      password: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern(/^(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/),\n        ],\n      ],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.registerForm!.valid) {\n      const { name, password } = this.registerForm!.value;\n      this.http\n        .post('https://your-backend-api/Auth/Register', { name, password })\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(() => {\n          this.router.navigate(['/login']);\n        });\n    }\n  }\n}\n","<p>register works!</p>\n"],"mappings":"AAAA,SAAQA,OAAO,EAAEC,SAAS,QAAO,MAAM;AAEvC,SAAgCC,UAAU,QAAO,gBAAgB;;;;;AAIjE,MAKaC,iBAAiB;EAI5BC,YAAoBC,EAAe,EAAUC,IAAgB,EAAUC,MAAc;IAAjE,KAAAF,EAAE,GAAFA,EAAE;IAAuB,KAAAC,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAH7E,KAAAC,YAAY,GAAqB,IAAI;IAC7B,KAAAC,QAAQ,GAAG,IAAIT,OAAO,EAAQ;EAEkD;EAExFU,QAAQA,CAAA;IACN,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACH,QAAQ,CAACI,IAAI,EAAE;IACpB,IAAI,CAACJ,QAAQ,CAACK,QAAQ,EAAE;EAC1B;EAEAH,gBAAgBA,CAAA;IACd,IAAI,CAACH,YAAY,GAAG,IAAI,CAACH,EAAE,CAACU,KAAK,CAAC;MAChCC,IAAI,EAAE,CAAC,EAAE,EAAE,CAACd,UAAU,CAACe,QAAQ,CAAC,CAAC;MACjCC,QAAQ,EAAE,CACR,EAAE,EACF,CACEhB,UAAU,CAACe,QAAQ,EACnBf,UAAU,CAACiB,OAAO,CAAC,2DAA2D,CAAC,CAChF;KAEJ,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACZ,YAAa,CAACa,KAAK,EAAE;MAC5B,MAAM;QAAEL,IAAI;QAAEE;MAAQ,CAAE,GAAG,IAAI,CAACV,YAAa,CAACc,KAAK;MACnD,IAAI,CAAChB,IAAI,CACNiB,IAAI,CAAC,wCAAwC,EAAE;QAAEP,IAAI;QAAEE;MAAQ,CAAE,CAAC,CAClEM,IAAI,CAACvB,SAAS,CAAC,IAAI,CAACQ,QAAQ,CAAC,CAAC,CAC9BgB,SAAS,CAAC,MAAK;QACd,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAClC,CAAC,CAAC;;EAER;;AAtCWvB,iBAAiB,C;mBAAjBA,iBAAiB,EAAAwB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,UAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA;AAAA;AAAjB/B,iBAAiB,C;QAAjBA,iBAAiB;EAAAgC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCX9Bb,EAAA,CAAAe,cAAA,QAAG;MAAAf,EAAA,CAAAgB,MAAA,sBAAe;MAAAhB,EAAA,CAAAiB,YAAA,EAAI;;;;;SDWTzC,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}