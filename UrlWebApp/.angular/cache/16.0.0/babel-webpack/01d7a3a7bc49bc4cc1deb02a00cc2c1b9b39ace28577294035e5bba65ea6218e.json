{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ShortUrlDetailsComponent_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵtext(1, \"Update Description\");\n    i0.ɵɵelementEnd();\n  }\n}\nclass ShortUrlDetailsComponent {\n  constructor(http, route) {\n    this.http = http;\n    this.route = route;\n  }\n  ngOnInit() {\n    // Get the ID from the route parameters\n    this.id = +this.route.snapshot.paramMap.get('id');\n    // Check if the user is an admin\n    this.isAdmin =\n    // Replace this with the logic to determine if the user is an admin\n    // Load the description from the API\n    this.loadDescription();\n  }\n  loadDescription() {\n    this.http.get(`${environment.apiUrl}/short-urls/${this.id}/description`).subscribe(response => {\n      this.description = response.Description;\n    }, error => {\n      console.error('Error:', error);\n    });\n  }\n  updateDescription() {\n    this.http.put(`${environment.apiUrl}/short-urls/${this.id}/description`, this.description).subscribe(() => {\n      alert('Description updated successfully');\n    }, error => {\n      console.error('Error:', error);\n    });\n  }\n}\nShortUrlDetailsComponent.ɵfac = function ShortUrlDetailsComponent_Factory(t) {\n  return new (t || ShortUrlDetailsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nShortUrlDetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ShortUrlDetailsComponent,\n  selectors: [[\"app-short-url-details\"]],\n  decls: 5,\n  vars: 3,\n  consts: [[3, \"ngSubmit\"], [\"name\", \"description\", 3, \"ngModel\", \"readonly\", \"ngModelChange\"], [\"type\", \"submit\", 4, \"ngIf\"], [\"type\", \"submit\"]],\n  template: function ShortUrlDetailsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ShortUrlDetailsComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.updateDescription();\n      });\n      i0.ɵɵelementStart(3, \"textarea\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function ShortUrlDetailsComponent_Template_textarea_ngModelChange_3_listener($event) {\n        return ctx.description = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, ShortUrlDetailsComponent_button_4_Template, 2, 0, \"button\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.description)(\"readonly\", !ctx.isAdmin);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isAdmin);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ShortUrlDetailsComponent };","map":{"version":3,"names":["environment","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ShortUrlDetailsComponent","constructor","http","route","ngOnInit","id","snapshot","paramMap","get","isAdmin","loadDescription","apiUrl","subscribe","response","description","Description","error","console","updateDescription","put","alert","ɵɵdirectiveInject","i1","HttpClient","i2","ActivatedRoute","selectors","decls","vars","consts","template","ShortUrlDetailsComponent_Template","rf","ctx","ɵɵlistener","ShortUrlDetailsComponent_Template_form_ngSubmit_2_listener","ShortUrlDetailsComponent_Template_textarea_ngModelChange_3_listener","$event","ɵɵtemplate","ShortUrlDetailsComponent_button_4_Template","ɵɵadvance","ɵɵproperty"],"sources":["/Users/artur.zaiats/Documents/Projects/UrlWebApp/src/app/short-url-details/short-url-details.component.ts","/Users/artur.zaiats/Documents/Projects/UrlWebApp/src/app/short-url-details/short-url-details.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-short-url-details',\n  templateUrl: './short-url-details.component.html',\n  styleUrls: ['./short-url-details.component.css']\n})\nexport class ShortUrlDetailsComponent implements OnInit {\n  id: number;\n  description: string;\n  isAdmin: boolean;\n\n  constructor(private http: HttpClient, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // Get the ID from the route parameters\n    this.id = +this.route.snapshot.paramMap.get('id');\n\n    // Check if the user is an admin\n    this.isAdmin = // Replace this with the logic to determine if the user is an admin\n\n      // Load the description from the API\n      this.loadDescription();\n  }\n\n  loadDescription(): void {\n    this.http.get<{ Description: string }>(`${environment.apiUrl}/short-urls/${this.id}/description`).subscribe(\n      (response) => {\n        this.description = response.Description;\n      },\n      (error) => {\n        console.error('Error:', error);\n      }\n    );\n  }\n\n  updateDescription(): void {\n    this.http.put(`${environment.apiUrl}/short-urls/${this.id}/description`, this.description).subscribe(\n      () => {\n        alert('Description updated successfully');\n      },\n      (error) => {\n        console.error('Error:', error);\n      }\n    );\n  }\n}\n","<h2>Description</h2>\n<form (ngSubmit)=\"updateDescription()\">\n  <textarea [(ngModel)]=\"description\" name=\"description\" [readonly]=\"!isAdmin\"></textarea>\n  <button type=\"submit\" *ngIf=\"isAdmin\">Update Description</button>\n</form>\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,8BAA8B;;;;;;;;ICAxDC,EAAA,CAAAC,cAAA,gBAAsC;IAAAD,EAAA,CAAAE,MAAA,yBAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;ADEnE,MAKaC,wBAAwB;EAKnCC,YAAoBC,IAAgB,EAAUC,KAAqB;IAA/C,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,KAAK,GAALA,KAAK;EAAoB;EAEvEC,QAAQA,CAAA;IACN;IACA,IAAI,CAACC,EAAE,GAAG,CAAC,IAAI,CAACF,KAAK,CAACG,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAEjD;IACA,IAAI,CAACC,OAAO;IAAG;IAEb;IACA,IAAI,CAACC,eAAe,EAAE;EAC1B;EAEAA,eAAeA,CAAA;IACb,IAAI,CAACR,IAAI,CAACM,GAAG,CAA0B,GAAGb,WAAW,CAACgB,MAAM,eAAe,IAAI,CAACN,EAAE,cAAc,CAAC,CAACO,SAAS,CACxGC,QAAQ,IAAI;MACX,IAAI,CAACC,WAAW,GAAGD,QAAQ,CAACE,WAAW;IACzC,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CACF;EACH;EAEAE,iBAAiBA,CAAA;IACf,IAAI,CAAChB,IAAI,CAACiB,GAAG,CAAC,GAAGxB,WAAW,CAACgB,MAAM,eAAe,IAAI,CAACN,EAAE,cAAc,EAAE,IAAI,CAACS,WAAW,CAAC,CAACF,SAAS,CAClG,MAAK;MACHQ,KAAK,CAAC,kCAAkC,CAAC;IAC3C,CAAC,EACAJ,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CACF;EACH;;AAtCWhB,wBAAwB,C;mBAAxBA,wBAAwB,EAAAJ,EAAA,CAAAyB,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAA3B,EAAA,CAAAyB,iBAAA,CAAAG,EAAA,CAAAC,cAAA;AAAA;AAAxBzB,wBAAwB,C;QAAxBA,wBAAwB;EAAA0B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,kCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCVrCpC,EAAA,CAAAC,cAAA,SAAI;MAAAD,EAAA,CAAAE,MAAA,kBAAW;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACpBH,EAAA,CAAAC,cAAA,cAAuC;MAAjCD,EAAA,CAAAsC,UAAA,sBAAAC,2DAAA;QAAA,OAAYF,GAAA,CAAAf,iBAAA,EAAmB;MAAA,EAAC;MACpCtB,EAAA,CAAAC,cAAA,kBAA6E;MAAnED,EAAA,CAAAsC,UAAA,2BAAAE,oEAAAC,MAAA;QAAA,OAAAJ,GAAA,CAAAnB,WAAA,GAAAuB,MAAA;MAAA,EAAyB;MAA0CzC,EAAA,CAAAG,YAAA,EAAW;MACxFH,EAAA,CAAA0C,UAAA,IAAAC,0CAAA,oBAAiE;MACnE3C,EAAA,CAAAG,YAAA,EAAO;;;MAFKH,EAAA,CAAA4C,SAAA,GAAyB;MAAzB5C,EAAA,CAAA6C,UAAA,YAAAR,GAAA,CAAAnB,WAAA,CAAyB,cAAAmB,GAAA,CAAAxB,OAAA;MACZb,EAAA,CAAA4C,SAAA,GAAa;MAAb5C,EAAA,CAAA6C,UAAA,SAAAR,GAAA,CAAAxB,OAAA,CAAa;;;;;;SDOzBT,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}