{"ast":null,"code":"import { __decorate } from \"tslib\";\nlet RegisterComponent = class RegisterComponent {\n  constructor(fb, http, router) {\n    this.fb = fb;\n    this.http = http;\n    this.router = router;\n    this.destroy$ = new Subject();\n  }\n  ngOnInit() {\n    this.initRegisterForm();\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  initRegisterForm() {\n    this.registerForm = this.fb.group({\n      name: ['', [Validators.required]],\n      password: ['', [Validators.required, Validators.pattern(/^(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)]]\n    });\n  }\n  onSubmit() {\n    if (this.registerForm.valid) {\n      const {\n        name,\n        password\n      } = this.registerForm.value;\n      this.http.post('https://your-backend-api/Auth/Register', {\n        name,\n        password\n      }).pipe(takeUntil(this.destroy$)).subscribe(() => {\n        this.router.navigate(['/login']);\n      });\n    }\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"names":["RegisterComponent","constructor","fb","http","router","destroy$","Subject","ngOnInit","initRegisterForm","ngOnDestroy","next","complete","registerForm","group","name","Validators","required","password","pattern","onSubmit","valid","value","post","pipe","takeUntil","subscribe","navigate","__decorate","Component","selector","templateUrl","styleUrls"],"sources":["/Users/artur.zaiats/Documents/Projects/UrlWebApp/src/app/register/register.component.ts"],"sourcesContent":["@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n  registerForm: FormGroup;\n  private destroy$ = new Subject<void>();\n\n  constructor(private fb: FormBuilder, private http: HttpClient, private router: Router) {}\n\n  ngOnInit(): void {\n    this.initRegisterForm();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  initRegisterForm(): void {\n    this.registerForm = this.fb.group({\n      name: ['', [Validators.required]],\n      password: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern(/^(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/),\n        ],\n      ],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.registerForm.valid) {\n      const { name, password } = this.registerForm.value;\n      this.http\n        .post('https://your-backend-api/Auth/Register', { name, password })\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(() => {\n          this.router.navigate(['/login']);\n        });\n    }\n  }\n}\n"],"mappings":";AAKA,IAAaA,iBAAiB,GAA9B,MAAaA,iBAAiB;EAI5BC,YAAoBC,EAAe,EAAUC,IAAgB,EAAUC,MAAc;IAAjE,KAAAF,EAAE,GAAFA,EAAE;IAAuB,KAAAC,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAFrE,KAAAC,QAAQ,GAAG,IAAIC,OAAO,EAAQ;EAEkD;EAExFC,QAAQA,CAAA;IACN,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACJ,QAAQ,CAACK,IAAI,EAAE;IACpB,IAAI,CAACL,QAAQ,CAACM,QAAQ,EAAE;EAC1B;EAEAH,gBAAgBA,CAAA;IACd,IAAI,CAACI,YAAY,GAAG,IAAI,CAACV,EAAE,CAACW,KAAK,CAAC;MAChCC,IAAI,EAAE,CAAC,EAAE,EAAE,CAACC,UAAU,CAACC,QAAQ,CAAC,CAAC;MACjCC,QAAQ,EAAE,CACR,EAAE,EACF,CACEF,UAAU,CAACC,QAAQ,EACnBD,UAAU,CAACG,OAAO,CAAC,2DAA2D,CAAC,CAChF;KAEJ,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACP,YAAY,CAACQ,KAAK,EAAE;MAC3B,MAAM;QAAEN,IAAI;QAAEG;MAAQ,CAAE,GAAG,IAAI,CAACL,YAAY,CAACS,KAAK;MAClD,IAAI,CAAClB,IAAI,CACNmB,IAAI,CAAC,wCAAwC,EAAE;QAAER,IAAI;QAAEG;MAAQ,CAAE,CAAC,CAClEM,IAAI,CAACC,SAAS,CAAC,IAAI,CAACnB,QAAQ,CAAC,CAAC,CAC9BoB,SAAS,CAAC,MAAK;QACd,IAAI,CAACrB,MAAM,CAACsB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAClC,CAAC,CAAC;;EAER;CACD;AAvCY1B,iBAAiB,GAAA2B,UAAA,EAL7BC,SAAS,CAAC;EACTC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACW/B,iBAAiB,CAuC7B;SAvCYA,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}