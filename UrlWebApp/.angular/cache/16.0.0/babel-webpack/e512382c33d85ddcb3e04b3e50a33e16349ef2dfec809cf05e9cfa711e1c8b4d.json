{"ast":null,"code":"export const passwordValidator = control => {\n  const value = control.value;\n  const hasUpperCase = /[A-Z]/.test(value);\n  const hasSpecialSymbol = /[!@#$%^&*(),.?\":{}|<>]/.test(value);\n  const hasDigit = /\\d/.test(value);\n  if (!hasUpperCase || !hasSpecialSymbol || !hasDigit) {\n    return {\n      passwordRequirements: true\n    };\n  }\n  return null;\n};","map":{"version":3,"names":["passwordValidator","control","value","hasUpperCase","test","hasSpecialSymbol","hasDigit","passwordRequirements"],"sources":["/Users/artur.zaiats/Documents/Projects/UrlWebApp/src/app/login/password.validator.ts"],"sourcesContent":["import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n\nexport const passwordValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  const value = control.value;\n  const hasUpperCase = /[A-Z]/.test(value);\n  const hasSpecialSymbol = /[!@#$%^&*(),.?\":{}|<>]/.test(value);\n  const hasDigit = /\\d/.test(value);\n\n  if (!hasUpperCase || !hasSpecialSymbol || !hasDigit) {\n    return { passwordRequirements: true };\n  }\n\n  return null;\n};\n"],"mappings":"AAEA,OAAO,MAAMA,iBAAiB,GAAiBC,OAAwB,IAA6B;EAClG,MAAMC,KAAK,GAAGD,OAAO,CAACC,KAAK;EAC3B,MAAMC,YAAY,GAAG,OAAO,CAACC,IAAI,CAACF,KAAK,CAAC;EACxC,MAAMG,gBAAgB,GAAG,wBAAwB,CAACD,IAAI,CAACF,KAAK,CAAC;EAC7D,MAAMI,QAAQ,GAAG,IAAI,CAACF,IAAI,CAACF,KAAK,CAAC;EAEjC,IAAI,CAACC,YAAY,IAAI,CAACE,gBAAgB,IAAI,CAACC,QAAQ,EAAE;IACnD,OAAO;MAAEC,oBAAoB,EAAE;IAAI,CAAE;;EAGvC,OAAO,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}