{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport { Component } from \"@angular/core\";\nlet ShortUrlsComponent = class ShortUrlsComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.shortUrls = [];\n    this.newUrl = '';\n    this.errorMessage = '';\n    this.userRole = '';\n    this.userName = '';\n    this.destroy$ = new Subject();\n  }\n  ngOnInit() {\n    this.loadShortUrls();\n    this.userRole = localStorage.getItem('userRole');\n    this.userName = localStorage.getItem('userName');\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  loadShortUrls() {\n    this.http.get('https://localhost:7009/api/short-urls', {\n      withCredentials: true\n    }).pipe(takeUntil(this.destroy$)).subscribe(shortUrls => {\n      this.shortUrls = shortUrls;\n    });\n  }\n  addNewUrl(addUrlForm) {\n    if (addUrlForm.valid) {\n      if (this.newUrl) {\n        this.http.post('https://localhost:7009/api/short-urls', {\n          url: this.newUrl\n        }, {\n          withCredentials: true\n        }).pipe(takeUntil(this.destroy$)).subscribe(response => {\n          this.loadShortUrls();\n          this.newUrl = '';\n          this.errorMessage = '';\n        }, error => {\n          // Handle error, e.g., set error message\n          this.errorMessage = 'URL already exists.';\n        });\n      }\n    } else {\n      console.error('Invalid URL format.');\n    }\n  }\n  deleteUrl(id) {\n    const endpoint = this.userRole === 'Admin' ? `https://localhost:7009/api/short-urls/${id}` : `https://localhost:7009/api/me/short-urls/${id}`;\n    this.http.delete(endpoint, {\n      withCredentials: true\n    }).pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.loadShortUrls();\n    });\n  }\n  viewDetails(id) {\n    this.router.navigate([`/short-url-info/${id}`]);\n  }\n  redirectToOriginalUrl(shortUrl) {\n    window.location.href = shortUrl;\n  }\n};\nShortUrlsComponent = __decorate([Component({\n  selector: 'app-short-urls',\n  templateUrl: './short-urls.component.html',\n  styleUrls: ['./short-urls.component.css']\n})], ShortUrlsComponent);\nexport { ShortUrlsComponent };","map":{"version":3,"names":["Subject","takeUntil","Component","ShortUrlsComponent","constructor","http","router","shortUrls","newUrl","errorMessage","userRole","userName","destroy$","ngOnInit","loadShortUrls","localStorage","getItem","ngOnDestroy","next","complete","get","withCredentials","pipe","subscribe","addNewUrl","addUrlForm","valid","post","url","response","error","console","deleteUrl","id","endpoint","delete","viewDetails","navigate","redirectToOriginalUrl","shortUrl","window","location","href","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/artur.zaiats/Documents/Projects/UrlWebApp/src/app/short-urls/short-urls.component.ts"],"sourcesContent":["import {Subject, takeUntil} from \"rxjs\";\nimport {Component, OnDestroy, OnInit} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Router} from \"@angular/router\";\nimport {NgForm} from \"@angular/forms\";\n\ninterface ShortUrl {\n  urlId: number;\n  sourceUrl: string;\n  shortUrl: string;\n  createdAt: string;\n  ownerUser: {\n    name: string;\n  };\n}\n\ninterface OwnerUser {\n  name: string;\n}\n\n\n@Component({\n  selector: 'app-short-urls',\n  templateUrl: './short-urls.component.html',\n  styleUrls: ['./short-urls.component.css'],\n})\nexport class ShortUrlsComponent implements OnInit, OnDestroy {\n  shortUrls: ShortUrl[] = [];\n  newUrl = '';\n  errorMessage = '';\n  userRole: string | null = '';\n  userName: string | null = '';\n  private destroy$ = new Subject<void>();\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  ngOnInit(): void {\n    this.loadShortUrls();\n    this.userRole = localStorage.getItem('userRole');\n    this.userName = localStorage.getItem('userName');\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  loadShortUrls(): void {\n    this.http\n      .get<ShortUrl[]>('https://localhost:7009/api/short-urls', { withCredentials: true })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((shortUrls) => {\n        this.shortUrls = shortUrls;\n      });\n  }\n\n  addNewUrl(addUrlForm: NgForm) {\n    if (addUrlForm.valid) {\n      if (this.newUrl) {\n        this.http\n          .post<{ id: number }>('https://localhost:7009/api/short-urls', { url: this.newUrl }, { withCredentials: true })\n          .pipe(takeUntil(this.destroy$))\n          .subscribe(\n            (response) => {\n              this.loadShortUrls();\n              this.newUrl = '';\n              this.errorMessage = '';\n            },\n            (error) => {\n              // Handle error, e.g., set error message\n              this.errorMessage = 'URL already exists.';\n            }\n          );\n      }\n    } else {\n      console.error('Invalid URL format.');\n    }\n  }\n\n  deleteUrl(id: number): void {\n    const endpoint = this.userRole === 'Admin'\n      ? `https://localhost:7009/api/short-urls/${id}`\n      : `https://localhost:7009/api/me/short-urls/${id}`;\n\n    this.http.delete(endpoint, { withCredentials: true })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.loadShortUrls();\n      });\n  }\n\n  viewDetails(id: number): void {\n    this.router.navigate([`/short-url-info/${id}`]);\n  }\n\n  redirectToOriginalUrl(shortUrl: string) {\n    window.location.href = shortUrl;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}