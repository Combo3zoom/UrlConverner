{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { LoginComponent } from \"./login/login.component\";\nimport { ShortUrlsComponent } from \"./short-urls/short-urls.component\";\nimport { RegisterComponent } from \"./register/register.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: 'login',\n  component: LoginComponent\n}, {\n  path: 'register',\n  component: RegisterComponent\n}, {\n  path: 'short-urls',\n  component: ShortUrlsComponent\n},\n// Add other routes as needed\n{\n  path: '',\n  redirectTo: '/login',\n  pathMatch: 'full'\n}, {\n  path: '**',\n  redirectTo: '/login',\n  pathMatch: 'full'\n} // Redirects to the login page for undefined routes\n];\n\nclass AppRoutingModule {}\nAppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n  return new (t || AppRoutingModule)();\n};\nAppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppRoutingModule\n});\nAppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [RouterModule.forRoot(routes), RouterModule]\n});\nexport { AppRoutingModule };\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","LoginComponent","ShortUrlsComponent","RegisterComponent","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","i1","exports"],"sources":["/Users/artur.zaiats/Documents/Projects/UrlWebApp/src/app/app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {LoginComponent} from \"./login/login.component\";\nimport {ShortUrlsComponent} from \"./short-urls/short-urls.component\";\nimport {RegisterComponent} from \"./register/register.component\";\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'short-urls', component: ShortUrlsComponent },\n  // Add other routes as needed\n  { path: '', redirectTo: '/login', pathMatch: 'full' }, // Redirects to the login page if no route is specified\n  { path: '**', redirectTo: '/login', pathMatch: 'full' }, // Redirects to the login page for undefined routes\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n"],"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AACtD,SAAQC,cAAc,QAAO,yBAAyB;AACtD,SAAQC,kBAAkB,QAAO,mCAAmC;AACpE,SAAQC,iBAAiB,QAAO,+BAA+B;;;AAE/D,MAAMC,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEL;AAAc,CAAE,EAC5C;EAAEI,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEH;AAAiB,CAAE,EAClD;EAAEE,IAAI,EAAE,YAAY;EAAEC,SAAS,EAAEJ;AAAkB,CAAE;AACrD;AACA;EAAEG,IAAI,EAAE,EAAE;EAAEE,UAAU,EAAE,QAAQ;EAAEC,SAAS,EAAE;AAAM,CAAE,EACrD;EAAEH,IAAI,EAAE,IAAI;EAAEE,UAAU,EAAE,QAAQ;EAAEC,SAAS,EAAE;AAAM,CAAE,CAAE;AAAA,CAC1D;;AAED,MAIaC,gBAAgB;AAAhBA,gBAAgB,C;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB,C;QAAhBA;AAAgB;AAAhBA,gBAAgB,C;YAHjBT,YAAY,CAACU,OAAO,CAACN,MAAM,CAAC,EAC5BJ,YAAY;AAAA;SAEXS,gBAAgB;;2EAAhBA,gBAAgB;IAAAE,OAAA,GAAAC,EAAA,CAAAZ,YAAA;IAAAa,OAAA,GAFjBb,YAAY;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}