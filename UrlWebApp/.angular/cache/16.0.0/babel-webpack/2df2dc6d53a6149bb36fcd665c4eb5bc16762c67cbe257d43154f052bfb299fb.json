{"ast":null,"code":"import { Subject, takeUntil } from \"rxjs\";\nimport { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction RegisterComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password must be at least 8 characters long, with at least one uppercase letter, one digit, and one special character. \");\n    i0.ɵɵelementEnd();\n  }\n}\nclass RegisterComponent {\n  constructor(fb, http, router) {\n    this.fb = fb;\n    this.http = http;\n    this.router = router;\n    this.registerForm = null;\n    this.destroy$ = new Subject();\n  }\n  ngOnInit() {\n    this.initRegisterForm();\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  initRegisterForm() {\n    this.registerForm = this.fb.group({\n      name: ['', [Validators.required]],\n      password: ['', [Validators.required, Validators.pattern(/^(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)]]\n    });\n  }\n  onSubmit() {\n    if (this.registerForm.valid) {\n      const {\n        name,\n        password\n      } = this.registerForm.value;\n      this.http.post('https://your-backend-api/Auth/Register', {\n        name,\n        password\n      }).pipe(takeUntil(this.destroy$)).subscribe(() => {\n        this.router.navigate(['/login']);\n      });\n    }\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 15,\n  vars: 4,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"name\"], [4, \"ngIf\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\"], [\"type\", \"submit\", 3, \"disabled\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\")(4, \"label\", 1);\n      i0.ɵɵtext(5, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 2);\n      i0.ɵɵtemplate(7, RegisterComponent_div_7_Template, 2, 0, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\")(9, \"label\", 4);\n      i0.ɵɵtext(10, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 5);\n      i0.ɵɵtemplate(12, RegisterComponent_div_12_Template, 2, 0, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 6);\n      i0.ɵɵtext(14, \"Register\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.registerForm.get(\"name\").invalid && ctx.registerForm.get(\"name\").touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.registerForm.get(\"password\").invalid && ctx.registerForm.get(\"password\").touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid);\n    }\n  },\n  dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { RegisterComponent };","map":{"version":3,"names":["Subject","takeUntil","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","RegisterComponent","constructor","fb","http","router","registerForm","destroy$","ngOnInit","initRegisterForm","ngOnDestroy","next","complete","group","name","required","password","pattern","onSubmit","valid","value","post","pipe","subscribe","navigate","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Router","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_2_listener","ɵɵelement","ɵɵtemplate","RegisterComponent_div_7_Template","RegisterComponent_div_12_Template","ɵɵadvance","ɵɵproperty","get","invalid","touched"],"sources":["/Users/artur.zaiats/Documents/Projects/UrlWebApp/src/app/register/register.component.ts","/Users/artur.zaiats/Documents/Projects/UrlWebApp/src/app/register/register.component.html"],"sourcesContent":["import {Subject, takeUntil} from \"rxjs\";\nimport {Component, OnDestroy, OnInit} from \"@angular/core\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n  registerForm: FormGroup | null = null;\n  private destroy$ = new Subject<void>();\n\n  constructor(private fb: FormBuilder, private http: HttpClient, private router: Router) {}\n\n  ngOnInit(): void {\n    this.initRegisterForm();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  initRegisterForm(): void {\n    this.registerForm = this.fb.group({\n      name: ['', [Validators.required]],\n      password: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern(/^(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/),\n        ],\n      ],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.registerForm!.valid) {\n      const { name, password } = this.registerForm!.value;\n      this.http\n        .post('https://your-backend-api/Auth/Register', { name, password })\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(() => {\n          this.router.navigate(['/login']);\n        });\n    }\n  }\n}\n","<h2>Register</h2>\n<form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n  <div>\n    <label for=\"name\">Name:</label>\n    <input id=\"name\" type=\"text\" formControlName=\"name\" />\n    <div *ngIf=\"registerForm.get('name').invalid && registerForm.get('name').touched\">\n      Name is required.\n    </div>\n  </div>\n  <div>\n    <label for=\"password\">Password:</label>\n    <input id=\"password\" type=\"password\" formControlName=\"password\" />\n    <div *ngIf=\"registerForm.get('password').invalid && registerForm.get('password').touched\">\n      Password must be at least 8 characters long, with at least one uppercase letter, one digit, and one special character.\n    </div>\n  </div>\n  <button type=\"submit\" [disabled]=\"registerForm.invalid\">Register</button>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}